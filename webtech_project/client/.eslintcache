[{"C:\\Users\\enciu\\Desktop\\foodWasteApp\\webtech_project\\client\\src\\index.js":"1","C:\\Users\\enciu\\Desktop\\foodWasteApp\\webtech_project\\client\\src\\App.js":"2","C:\\Users\\enciu\\Desktop\\foodWasteApp\\webtech_project\\client\\src\\components\\FoodItems\\FoodItems.js":"3","C:\\Users\\enciu\\Desktop\\foodWasteApp\\webtech_project\\client\\src\\components\\home\\Login.js":"4","C:\\Users\\enciu\\Desktop\\foodWasteApp\\webtech_project\\client\\src\\components\\user-profile\\AddFoodItem.js":"5","C:\\Users\\enciu\\Desktop\\foodWasteApp\\webtech_project\\client\\src\\components\\user-profile\\Profile.js":"6","C:\\Users\\enciu\\Desktop\\foodWasteApp\\webtech_project\\client\\src\\components\\home\\NewAccount.js":"7","C:\\Users\\enciu\\Desktop\\foodWasteApp\\webtech_project\\client\\src\\components\\notifications\\Notifications.js":"8","C:\\Users\\enciu\\Desktop\\foodWasteApp\\webtech_project\\client\\src\\components\\user-profile\\UserFoodItems.js":"9","C:\\Users\\enciu\\Desktop\\foodWasteApp\\webtech_project\\client\\src\\components\\user-profile\\UserReservedFoodItemsContainer.js":"10","C:\\Users\\enciu\\Desktop\\foodWasteApp\\webtech_project\\client\\src\\components\\friends\\AddFriend.js":"11","C:\\Users\\enciu\\Desktop\\foodWasteApp\\webtech_project\\client\\src\\components\\friends\\FriendsContainer.js":"12","C:\\Users\\enciu\\Desktop\\foodWasteApp\\webtech_project\\client\\src\\components\\menubar\\Menu.js":"13"},{"size":377,"mtime":1643210462681,"results":"14","hashOfConfig":"15"},{"size":1591,"mtime":1643152284000,"results":"16","hashOfConfig":"15"},{"size":8630,"mtime":1643203958000,"results":"17","hashOfConfig":"15"},{"size":4296,"mtime":1643203476000,"results":"18","hashOfConfig":"15"},{"size":6409,"mtime":1643206108000,"results":"19","hashOfConfig":"15"},{"size":7139,"mtime":1643204906000,"results":"20","hashOfConfig":"15"},{"size":6893,"mtime":1643203568000,"results":"21","hashOfConfig":"15"},{"size":5199,"mtime":1643203860000,"results":"22","hashOfConfig":"15"},{"size":14713,"mtime":1643211039800,"results":"23","hashOfConfig":"15"},{"size":6986,"mtime":1643211053863,"results":"24","hashOfConfig":"15"},{"size":4193,"mtime":1643211272802,"results":"25","hashOfConfig":"15"},{"size":2556,"mtime":1643210915946,"results":"26","hashOfConfig":"15"},{"size":2557,"mtime":1643211438470,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"hi7etk",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\enciu\\Desktop\\foodWasteApp\\webtech_project\\client\\src\\index.js",[],["59","60"],"C:\\Users\\enciu\\Desktop\\foodWasteApp\\webtech_project\\client\\src\\App.js",[],"C:\\Users\\enciu\\Desktop\\foodWasteApp\\webtech_project\\client\\src\\components\\FoodItems\\FoodItems.js",["61","62","63","64"],"import React from \"react\";\nimport \"./FoodItems.css\";\nimport { DataView } from \"primereact/dataview\";\nimport { Button } from \"primereact/button\";\nimport Menu from \"../menubar/Menu\";\nimport { Toast } from \"primereact/toast\";\n\n\nclass FoodItems extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      FoodItems: [],\n      layout: \"grid\",\n      itemBackgroundColor: \"\",\n    };\n\n    this.itemTemplate = this.itemTemplate.bind(this);\n\n    this.setFoodItemsImage = (FoodItems) => {\n      let fooditems = FoodItems;\n\n      for (let FoodItems of fooditems) {\n        switch (FoodItems.category) {\n          case \"Vegetables\":\n            FoodItems.image =\n              \"https://images.unsplash.com/photo-1597362925123-77861d3fbac7?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80\";\n            break;\n          case \"Fruits\":\n            FoodItems.image =\n              \"https://images.unsplash.com/photo-1610832958506-aa56368176cf?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80\";\n            break;\n          case \"Meat\":\n            FoodItems.image =\n              \"https://images.unsplash.com/photo-1529692236671-f1f6cf9683ba?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80\";\n            break;\n          case \"Fish\":\n            FoodItems.image =\n              \"https://images.unsplash.com/photo-1611171711912-e3f6b536f532?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=687&q=80\";\n            break;\n          case \"Dairy\":\n            FoodItems.image =\n              \"https://images.unsplash.com/photo-1628088062854-d1870b4553da?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80\";\n            break;\n          default:\n            break;\n        }\n      }\n      return fooditems;\n    };\n\n    this.handleClick = async (data) => {\n      const FoodItemsId = data.id;\n      const FoodItemsUserId = data.userId;\n\n      const currentUserId = JSON.parse(localStorage.getItem(\"user\")).id;\n      if (FoodItemsUserId !== currentUserId) {\n        const res = await fetch(\n          `http://localhost:8080/api/users/${currentUserId}/reservations`,\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              date: new Date().toISOString(),\n              FoodItemsIds: [FoodItemsId],\n            }),\n          }\n        );\n\n        if (res.ok) {\n          const newReservation = await res.json();\n          const response = await fetch(\n            `http://localhost:8080/api/users/${FoodItemsUserId}/FoodItems/${FoodItemsId}`,\n            {\n              method: \"PUT\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                ...data,\n                status: \"RESERVED\",\n                reservationId: newReservation.id,\n              }),\n            }\n          );\n\n          if (response.ok) {\n            const updatedFoodItems = await response.json();\n            let newFoodItems = this.state.FoodItems;\n            const foundIndex = newFoodItems.findIndex(\n              (FoodItems) => FoodItems.id === updatedFoodItems.id\n            );\n            if (foundIndex !== -1) {\n              newFoodItems[foundIndex] = updatedFoodItems;\n              newFoodItems = this.setFoodItemsImage(newFoodItems);\n              this.setState({ FoodItems: newFoodItems });\n            }\n          } else {\n            alert(response.status);\n          }\n        } else {\n          alert(res.status);\n        }\n      }\n    };\n\n    this.daysUntil = (data) => {\n      let yearNow = parseInt(new Date().getFullYear());\n      let monthNow = parseInt(new Date().getMonth() + 1);\n      let dayNow = parseInt(new Date().getDate());\n\n      if (yearNow === data.substring(0, 4)) {\n        if (monthNow === data.substring(5, 7)) {\n          return data.substring(8, 10) - dayNow;\n        }\n      }\n      return data.substring(8, 10) - dayNow; //return 5;\n    };\n  }\n\n  async componentDidMount() {\n    const response = await fetch(`http://localhost:8080/api/FoodItems`);\n\n    const FoodItems = await response.json();\n    console.log(FoodItems)\n    let fooditems = this.setFoodItemsImage(FoodItems);\n    this.setState({\n      FoodItems: fooditems,\n    });\n  }\n\n  itemTemplate(FoodItems) {\n    if (!FoodItems) {\n      return;\n    }\n    return this.renderGridItem(FoodItems);\n  }\n\n  setItemBackgroundColor(data) {\n    let background = \"\";\n\n    if (\n      this.daysUntil(data.expirationDate) > 3 &&\n      data.status === \"AVAILABLE\"\n    ) {\n      background = \"#bae3ba\";\n    } else {\n      if (data.status === \"AVAILABLE\") {\n        console.log(this.daysUntil(data.expirationDate));\n        if (this.daysUntil(data.expirationDate) <= 0) {\n          background = \"#cf6b5f\";\n        } else if (this.daysUntil(data.expirationDate) <= 3) {\n          background = \"#ebe4ab\";\n        }\n      }\n    }\n    return background;\n  }\n\n  renderGridItem(data) {\n    return (\n      <>\n\n        <div class=\"product-card\">\n          <div class=\"badge border\" style={{ backgroundColor: \"orange\" }}>{data.status}</div>\n          <div class=\"product-tumb\" style={{ backgroundColor: this.setItemBackgroundColor(data) }}>\n            <img src={`${data.image}`}\n              onError={(e) =>\n              (e.target.src =\n                \"\")\n              }\n              alt={data.name}></img>\n          </div>\n          <div class=\"product-details\">\n            <div>\n              <span class=\"d-inline-block float-left\">\n                <i class=\"bi bi-tags\"></i>\n              </span>\n              <span class=\"product-catagory  d-inline-block  \">\n                &nbsp; <u>Category:</u>\n              </span>\n            </div>\n            <h5>{data.category ? data.category.toUpperCase() : \"-\"}</h5>\n            <div>\n              <span class=\"d-inline-block float-left\">\n                <h5 class=\"bi bi-bag\"></h5>\n              </span>\n              <span class=\"product-catagory d-inline-block font-weight-bold \"\n              >\n                &nbsp; <u>Name:</u>\n              </span>\n            </div>\n            <h4>{data.name}</h4>\n\n            <div>\n              <span class=\"d-inline-block float-left\">\n                <h5 class=\"bi bi-card-text\"></h5>              </span>\n              <span class=\"product-catagory d-inline-block font-weight-bold \"\n              >\n                &nbsp; <u>Ingredients:</u>\n              </span>\n            </div>\n            <div class=\"rounded border border-dark border-2 p-2\">\n              <h5>{data.ingredients}</h5>\n            </div>\n\n            <div class=\"product-bottom-details\">\n\n              <div>\n                <span class=\"d-inline-block float-left\">\n                  <h5 class=\"bi-alarm\"></h5>\n                </span>\n                <span class=\"product-catagory d-inline-block font-weight-bold \"\n                >\n                  &nbsp; <u>Expirey Date:</u>\n                </span>\n              </div>\n              <div class=\"product-price\">{data.expirationDate.substring(0, 10)}</div>\n\n              <div class=\"product-links\">\n                <span class=\"d-inline-block float-right\">\n                  <h5 class=\"bi bi-speedometer2\"></h5>\n                </span>\n                <span class=\"product-catagory d-inline-block font-weight-bold \"\n                >\n                  <u>Weight:</u>&nbsp;\n                </span>\n              </div>\n              <p class=\"float-right\">\n                {data.weight} Kg\n              </p>\n            </div>\n            \n            <Button\n              label=\"GET IT\"\n              disabled={data.status === \"RESERVED\"}\n              onClick={() => this.handleClick(data)}\n            ></Button>\n            \n          </div>\n        </div>\n      </>\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <div\n          id=\"background\"\n        ></div>\n        <h1 style={{ marginTop: \"0px\", marginBottom: \"10px\",fontStyle:\"normal\",backgroundColor:'#C9906F' }}>Anti Food Waste App</h1>\n        <Menu />\n        <div>\n          <div>\n            <DataView\n              value={this.state.FoodItems}\n              layout={this.state.layout}\n              itemTemplate={this.itemTemplate}\n              rows={8}\n            />\n          </div>\n        </div>\n        <Toast ref={(el) => (this.toastBR = el)} position=\"bottom-right\" />\n      </>\n    );\n  }\n}\n\nexport default FoodItems;\n","C:\\Users\\enciu\\Desktop\\foodWasteApp\\webtech_project\\client\\src\\components\\home\\Login.js",["65"],"import React from \"react\";\nimport \"./Home.css\";\nimport { InputText } from \"primereact/inputtext\";\nimport { Button } from \"primereact/button\";\nimport { ProgressSpinner } from \"primereact/progressspinner\";\nimport { Link } from \"react-router-dom\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userName: \"\",\n      password: \"\",\n      errorMessage: \"\",\n      display: \"none\",\n    };\n\n    const SERVER = \"http://localhost:8080\";\n\n    this.isCorrectlyCompleted = () => {\n      if (this.state.userName.length < 3 || this.state.userName.length > 20) {\n        this.setState({\n          errorMessage: \"Username must have between 3 and 20 characters!\",\n        });\n        return false;\n      } else {\n        let letters = /^[0-9a-zA-Z]+$/;\n        if (\n          this.state.password.length < 4 ||\n          !this.state.password.match(letters)\n        ) {\n          this.setState({\n            errorMessage: \"Password must have at least 4 letters & numbers!\",\n          });\n          return false;\n        } else {\n          this.setState({\n            errorMessage: \"\",\n          });\n          return true;\n        }\n      }\n    };\n\n    this.handleSubmit = async () => {\n      if (this.isCorrectlyCompleted()) {\n        const response = await fetch(`${SERVER}/api/users/login`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            userName: this.state.userName,\n            password: this.state.password,\n          }),\n        });\n        if (response.ok) {\n          const user = await response.json();\n          this.setState({\n            display: \"block\",\n          });\n          localStorage.setItem(\"user\", JSON.stringify(user));\n          setTimeout(this.goToFoodItems, 1500);\n        } else {\n          this.setState({\n            errorMessage: \"Wrong username or password!\",\n          });\n        }\n      }\n    };\n\n    this.goToFoodItems = () => {\n      this.props.history.push(\"/FoodItems\");\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.location.state) {\n      this.setState({\n        userName: this.props.location.state.userName,\n        password: this.props.location.state.password,\n      });\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <div >\n        <h1 style={{marginTop: \"0px\", marginBottom: \"30px\",fontStyle:'normal',backgroundColor:'#C9906F'}}>Anti Food Waste App</h1>\n\n          <form class=\"center\"\n          style={{\n            background: \"#FFDEAD\",\n            }} >\n          <h2><u>Sign-In</u></h2>\n          <h1 class=\"bi bi-box-arrow-in-right\"></h1>\n            <div class=\"form-group col-12 \">\n              <h5>Username:</h5>\n              <InputText\n                    placeholder=\"Username\"\n                    value={this.state.userName}\n                    required\n                    onChange={(e) =>\n                      this.setState({ userName: e.target.value })\n                    }\n                  />\n            </div>\n            <div class=\"form-group col-12\">\n              <h5>Password:</h5>\n              <InputText\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    value={this.state.password}\n                    required\n                    onChange={(e) =>\n                      this.setState({ password: e.target.value })\n                    }\n                  />\n            </div>\n            <p id=\"errorMessage\">{this.state.errorMessage}</p>\n              <ProgressSpinner\n                style={{\n                  width: \"40px\",\n                  height: \"40px\",\n                  display: `${this.state.display}`,\n                }}\n              />\n            <div >\n                <Button\n                  label=\"Sign in\"\n                  type=\"button\"\n                   style={{ marginLeft:25, backgroundColor:\"#c5a9c9\"}}\n                  onClick={this.handleSubmit}\n                />\n              </div>\n          <Link\n              style={{marginTop: 15,marginLeft:45,alignSelf: \"center\" }}\n              to=\"/create-account\"\n            >\n              <u>{\"Don't have an account? Sign up!\"}</u>\n            </Link>\n          </form>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Login;\n","C:\\Users\\enciu\\Desktop\\foodWasteApp\\webtech_project\\client\\src\\components\\user-profile\\AddFoodItem.js",[],"C:\\Users\\enciu\\Desktop\\foodWasteApp\\webtech_project\\client\\src\\components\\user-profile\\Profile.js",[],"C:\\Users\\enciu\\Desktop\\foodWasteApp\\webtech_project\\client\\src\\components\\home\\NewAccount.js",[],"C:\\Users\\enciu\\Desktop\\foodWasteApp\\webtech_project\\client\\src\\components\\notifications\\Notifications.js",[],"C:\\Users\\enciu\\Desktop\\foodWasteApp\\webtech_project\\client\\src\\components\\user-profile\\UserFoodItems.js",["66"],"import React from \"react\";\nimport \"../FoodItems/FoodItems.css\";\nimport { DataView } from \"primereact/dataview\";\nimport { Button } from \"primereact/button\";\nimport Menu from \"../menubar/Menu\";\nimport { Dialog } from \"primereact/dialog\";\nimport { InputText } from \"primereact/inputtext\";\nimport { Toast } from \"primereact/toast\";\n\nclass UserFoodItems extends React.Component {\n  constructor() {\n    super();\n\n    const SERVER = \"http://localhost:8080/api/users\";\n\n    this.state = {\n      FoodItems: [],\n      layout: \"list\",\n      displayConfirmation: false,\n      message: \"\",\n      statusOk: true,\n      displayDialog: false,\n      selectedItem: null,\n      toastBR: \"\",\n      id: \"\",\n      name: \"\",\n      ingredients: \"\",\n      weight: \"\",\n    };\n\n    this.itemTemplate = this.itemTemplate.bind(this);\n\n    this.setFoodItemImage = (FoodItems) => {\n      let alim = FoodItems;\n\n      for (let aliment of alim) {\n        switch (aliment.category) {\n          case \"Vegetables\":\n            aliment.image =\n              \"https://images.unsplash.com/photo-1597362925123-77861d3fbac7?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80\";\n            break;\n          case \"Fruits\":\n            aliment.image =\n              \"https://images.unsplash.com/photo-1610832958506-aa56368176cf?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80\";\n            break;\n          case \"Meat\":\n            aliment.image =\n              \"https://images.unsplash.com/photo-1529692236671-f1f6cf9683ba?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80\";\n            break;\n          case \"Fish\":\n            aliment.image =\n              \"https://images.unsplash.com/photo-1611171711912-e3f6b536f532?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=687&q=80\";\n            break;\n          case \"Dairy\":\n            aliment.image =\n              \"https://images.unsplash.com/photo-1628088062854-d1870b4553da?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80\";\n            break;\n          default:\n            break;\n        }\n      }\n      return alim;\n    };\n\n    this.handleEditClick = (data) => {\n      this.setState({\n        selectedItem: data,\n        displayDialog: true,\n        id: data.id,\n        name: data.name,\n        ingredients: data.ingredients,\n        weight: data.weight,\n      });\n    };\n\n    this.showDeleteDialog = (data) => {\n      this.setState({\n        displayConfirmation: true,\n        selectedItem: data,\n      });\n    };\n\n    this.handleDeleteAliment = async (selectedAliment) => {\n      const userId = JSON.parse(localStorage.getItem(\"user\")).id;\n      const foodItemId = this.state.selectedItem.id;\n\n      const response = await fetch(\n        `${SERVER}/${userId}/FoodItems/${foodItemId}`,\n        {\n          method: \"DELETE\",\n        }\n      );\n\n      if (response.status === 204) {\n        const FoodItemsAfterDelete = this.state.FoodItems;\n        const foundIndex = FoodItemsAfterDelete.findIndex(\n          (foodItem) => foodItem.id === foodItemId\n        );\n        if (foundIndex !== -1) {\n          FoodItemsAfterDelete.splice(foundIndex, 1);\n          this.setState({\n            FoodItems: FoodItemsAfterDelete,\n          });\n          this.onHide();\n          this.showBottomRightSuccess(\"Food Item was successfully deleted!\");\n        }\n      }\n    };\n\n    this.onHide = () => {\n      this.setState({\n        displayDialog: false,\n        displayConfirmation: false,\n      });\n    };\n\n    this.saveChanges = async () => {\n      if (this.isCorrectlyCompleted()) {\n        const userId = JSON.parse(localStorage.getItem(\"user\")).id;\n        const response = await fetch(\n          `${SERVER}/${userId}/FoodItems/${this.state.id}`,\n          {\n            method: \"PUT\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              ...this.state.selectedItem,\n              name: this.state.name,\n              ingredients: this.state.ingredients,\n              weight: this.state.weight,\n            }),\n          }\n        );\n        if (response.ok) {\n          const updatedFoodItem = await response.json();\n          let newFoodItems = this.state.FoodItems;\n          const foundIndex = newFoodItems.findIndex(\n            (foodItem) => foodItem.id === updatedFoodItem.id\n          );\n          if (foundIndex !== -1) {\n            newFoodItems[foundIndex] = updatedFoodItem;\n            newFoodItems = this.setFoodItemImage(newFoodItems);\n            this.setState({ FoodItems: newFoodItems, selectedItem: null });\n            this.showBottomRightSuccess(\"Food item was successfully modified!\");\n            this.onHide();\n          }\n        } else {\n          this.showBottomRightError(\"An error has occured\");\n        }\n      }\n    };\n\n    this.isCorrectlyCompleted = () => {\n      const match = /^[0-9]+$/;\n      if (\n        this.state.name.length < 3 ||\n        !this.state.name ||\n        this.state.name.match(match)\n      ) {\n        this.setState({\n          message: \"The food item must have at least 3 letters!\",\n          statusOk: false,\n        });\n        return false;\n      } else {\n        if (!this.state.weight || this.state.weight < 0) {\n          this.setState({\n            message: \"The food item weight must be properly completed!\",\n            statusOk: false,\n          });\n          return false;\n        } else {\n          if (!this.state.ingredients || this.state.ingredients.length < 2) {\n            this.setState({\n              message: \"Ingredients must have at least 2 letters!\",\n              statusOk: false,\n            });\n            return false;\n          } else {\n            this.setState({\n              message: \"\",\n              statusOk: true,\n            });\n            return true;\n          }\n        }\n      }\n    };\n\n    this.shareOnFacebook = () => {\n      window.FB.ui(\n        {\n          method: \"share\",\n          href: \"https://alimentespeciale.ro/\", //'https://developers.facebook.com/docs/'   /*http://localhost:3000/FoodItems*/\n        },\n        function (response) { }\n      );\n    };\n\n    this.daysUntil = (data) => {\n      let today = new Date();\n\n      let yearNow = String(today.getFullYear());\n      let monthNow = String(today.getMonth() + 1).padStart(2, \"0\");\n      let dayNow = String(today.getDate()).padStart(2, \"0\");\n\n      if (yearNow === data.substring(0, 4)) {\n        if (monthNow === data.substring(5, 7)) {\n          return data.substring(8, 10) - dayNow;\n        }\n      }\n      return 5;\n    };\n  }\n\n  async componentDidMount() {\n    const SERVER = \"http://localhost:8080/api/users\";\n    const userId = JSON.parse(localStorage.getItem(\"user\")).id;\n\n    const response = await fetch(`${SERVER}/${userId}/FoodItems`);\n    if (response.ok) {\n      const FoodItems = await response.json();\n      let alim = this.setFoodItemImage(FoodItems);\n      this.setState({\n        FoodItems: alim,\n      });\n    } else {\n      alert(\"HTTP-error: \" + response.status);\n    }\n  }\n\n  itemTemplate(aliment) {\n    if (!aliment) {\n      return;\n    }\n\n    return this.renderListItem(aliment);\n  }\n\n  showBottomRightSuccess(detail) {\n    this.toastBR.show({\n      severity: \"success\",\n      summary: \"Success\",\n      detail: `${detail}`,\n      life: 3000,\n    });\n  }\n\n  showBottomRightError(detail) {\n    this.toastBR.show({\n      severity: \"error\",\n      summary: \"Error\",\n      detail: `${detail}`,\n      life: 3000,\n    });\n  }\n\n  setItemBackgroundColor(data) {\n    let background = \"\";\n\n    if (\n      this.daysUntil(data.expirationDate) > 3 &&\n      data.status === \"AVAILABLE\"\n    ) {\n      background = \"#bae3ba\";\n    } else {\n      if (data.status === \"AVAILABLE\") {\n        if (this.daysUntil(data.expirationDate) <= 0) {\n          background = \"#cf6b5f\";\n        } else if (this.daysUntil(data.expirationDate) <= 3) {\n          background = \"#ebe4ab\";\n        }\n      } else {\n        background = \"#ebebeb\";\n      }\n    }\n    return background;\n  }\n\n  renderListItem(data) {\n    return (\n      <a href=\"#\" class=\"list-group-item list-group-item-action d-flex gap-3 py-3 m-2\" aria-current=\"true\">\n        <div style={{\n          backgroundColor: this.setItemBackgroundColor(data),\n        }}\n          class=\"rounded border p-2 flex-shrink-0\">\n          <img\n            src={data.image} alt=\"twbs\" width=\"150\" height=\"150\" ></img>\n        </div>\n\n        <div class=\"d-flex gap-2 w-100 justify-content-between m-2 \" >\n          <div >\n            {/* <------------Name---------> */}\n            &nbsp;\n            <h6 class=\"mb-0 bi bi-bag\">\n              <span class=\"product-catagory d-inline-block font-weight-bold \"\n              >\n                &nbsp; <u>Name:</u>\n              </span>\n              &nbsp;{data.name.toUpperCase()}\n            </h6>\n            {/* <-------Category---------> */}\n            &nbsp;\n            <h6 class=\"mb-0 bi bi-tags float-left\">\n              <span class=\"product-catagory d-inline-block font-weight-bold \"\n              >\n                &nbsp; <u>Category:</u>\n              </span>\n              &nbsp;{data.category}&nbsp;\n            </h6>\n\n            {/* <-------weight---------> */}\n            &nbsp; &nbsp;\n            <h6 class=\"mb-0 bi bi-speedometer2 float-left\">\n              <span class=\"product-catagory d-inline-block font-weight-bold \"\n              >\n                &nbsp; <u>Weight:</u>\n              </span>\n              &nbsp;{data.weight}kg&nbsp;&nbsp;\n            </h6>\n            {/* <-------Expiry---------> */}\n            &nbsp;\n            <h6 class=\"mb-0 bi-alarm float-left\">\n              <span class=\"product-catagory d-inline-block font-weight-bold \"\n              >\n                &nbsp; <u>Expirey Date:</u>\n              </span>\n              &nbsp;{data.expirationDate.substring(0, 10)}\n              &nbsp;&nbsp;\n            </h6>\n\n            {/* <-------Ingredents---------> */}\n\n            <br></br>\n            &nbsp;&nbsp;\n            <h6 class=\"mb-0 bi bi-card-text  d-inline-block\">\n              <span class=\"product-catagory font-weight-bold  d-inline-block \"\n              >\n                &nbsp; <u>Ingredients:</u>\n              </span>\n              &nbsp;{data.ingredients}\n            </h6>\n          </div>\n\n          <Button\n            className=\"block-btn\"\n            label=\"Edit\"\n            style={{ margin: \"25px\" }}\n            onClick={() => this.handleEditClick(data)}\n          />\n          <Button\n            className=\"p-button-danger block-btn\"\n            label=\"Delete\"\n            style={{ margin: \"25px\" }}\n            onClick={() => this.showDeleteDialog(data)}\n          />\n        </div>\n      </a>\n    );\n  }\n\n  renderFooter() {\n    return (\n      <div>\n        <Button\n          label=\"No\"\n          icon=\"pi pi-times\"\n          onClick={() => this.onHide()}\n          className=\"p-button-text\"\n        />\n        <Button\n          label=\"Yes\"\n          icon=\"pi pi-check\"\n          onClick={() => this.handleDeleteAliment(this.state.selectedItem)}\n          autoFocus\n        />\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <div\n          id=\"background\"\n        ></div>\n        <h1 style={{ marginTop: \"0px\", marginBottom: \"30px\", fontStyle: 'normal', backgroundColor: '#C9906F' }}>Anti Food Waste App</h1>\n\n        <Menu />\n        <h1 style={{ marginTop: \"0px\", marginBottom: \"30px\", fontStyle: 'normal', backgroundColor: '#C9906F' }}>My FoodItems</h1>\n        <div>\n          <div className=\"card\">\n            <DataView\n              value={this.state.FoodItems}\n              layout={this.state.layout}\n              itemTemplate={this.itemTemplate}\n              rows={4}\n            />\n            <Button\n              id=\"btnShare\"\n              label=\"Share on Facebook\"\n              icon=\"pi pi-send\"\n              className=\"p-button-rounded p-button-warning\"\n              onClick={this.shareOnFacebook}\n            />\n          </div>\n        </div>\n        <Dialog\n          header=\"Edit Food Item\"\n          visible={this.state.displayDialog}\n          style={{ width: \"50vw\" }}\n          onHide={this.onHide}\n        >\n          {this.state.selectedItem && (\n            <>\n              <div id=\"edit\">\n                <div class=\"form-group col-12 \">\n                  <h5>Item Name:</h5>\n                  <InputText\n                    placeholder={this.state.name}\n                    value={this.state.name}\n                    className=\"inputs\"\n                    onChange={(e) => this.setState({ name: e.target.value })}\n                  />\n                </div>\n\n                <div class=\"form-group col-12 \">\n                  <h5>Ingredients:</h5>\n                  <InputText\n                    required\n                    placeholder={this.state.ingredients}\n                    value={this.state.ingredients}\n                    className=\"inputs\"\n                    onChange={(e) =>\n                      this.setState({ ingredients: e.target.value })\n                    }\n                  />\n                </div>\n\n                <div class=\"form-group col-12 \">\n                  <h5>Weight:</h5>\n                  <InputText\n                    required\n                    placeholder={this.state.weight}\n                    value={this.state.weight}\n                    className=\"inputs\"\n                    onChange={(e) => this.setState({ weight: e.target.value })}\n                  />\n                </div>\n\n              </div>\n              <p id=\"errorMessage\">{this.state.message}</p>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  marginTop: \"30px\",\n                }}\n              >\n                <Button label=\"Apply\" onClick={this.saveChanges} />\n              </div>\n            </>\n          )}\n        </Dialog>\n        <Dialog\n          header=\"Delete Food Item\"\n          visible={this.state.displayConfirmation}\n          modal\n          style={{ width: \"350px\" }}\n          footer={this.renderFooter()}\n          onHide={() => this.onHide()}\n        >\n          <div className=\"confirmation-content\">\n            <i\n              className=\"pi pi-exclamation-triangle p-mr-3\"\n              style={{ fontSize: \"2rem\" }}\n            />\n            <span>Are you sure you want to delete this Food Item?</span>\n          </div>\n        </Dialog>\n        <Toast ref={(el) => (this.toastBR = el)} position=\"bottom-right\" />\n      </>\n    );\n  }\n}\n\nexport default UserFoodItems;\n","C:\\Users\\enciu\\Desktop\\foodWasteApp\\webtech_project\\client\\src\\components\\user-profile\\UserReservedFoodItemsContainer.js",["67","68","69","70"],"import React from \"react\";\nimport { DataView } from \"primereact/dataview\";\nimport Menu from \"../menubar/Menu\";\n\nclass UserReservedFoodItemsContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      reservations: [],\n      FoodItems: [],\n      layout: \"list\",\n    };\n\n    this.itemTemplate = this.itemTemplate.bind(this);\n\n    this.setAlimentImage = (FoodItems) => {\n      let alim = FoodItems;\n\n      for (let aliment of alim) {\n        switch (aliment.category) {\n          case \"Vegetables\":\n            aliment.image =\n              \"https://images.unsplash.com/photo-1597362925123-77861d3fbac7?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80\";\n            break;\n          case \"Fruits\":\n            aliment.image =\n              \"https://images.unsplash.com/photo-1610832958506-aa56368176cf?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80\";\n            break;\n          case \"Meat\":\n            aliment.image =\n              \"https://images.unsplash.com/photo-1529692236671-f1f6cf9683ba?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80\";\n            break;\n          case \"Fish\":\n            aliment.image =\n              \"https://images.unsplash.com/photo-1611171711912-e3f6b536f532?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=687&q=80\";\n            break;\n          case \"Dairy\":\n            aliment.image =\n              \"https://images.unsplash.com/photo-1628088062854-d1870b4553da?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80\";\n            break;\n          default:\n            break;\n        }\n      }\n      return alim;\n    };\n\n    this.daysUntil = (data) => {\n      let today = new Date();\n\n      let yearNow = String(today.getFullYear());\n      let monthNow = String(today.getMonth() + 1).padStart(2, \"0\");\n      let dayNow = String(today.getDate()).padStart(2, \"0\");\n\n      if (yearNow === data.substring(0, 4)) {\n        if (monthNow === data.substring(5, 7)) {\n          return data.substring(8, 10) - dayNow;\n        }\n      }\n      return 5;\n    };\n  }\n\n  async componentDidMount() {\n    const SERVER = \"http://localhost:8080/api/users\";\n    const currentUserId = JSON.parse(localStorage.getItem(\"user\")).id;\n\n    const response = await fetch(`${SERVER}/${currentUserId}/reservations`);\n    if (response.ok) {\n      const reservations = await response.json();\n      let reservAlim = [];\n      for (let reserv of reservations) {\n        reservAlim.push(reserv.aliments[0]);\n      }\n      reservAlim = this.setAlimentImage(reservAlim);\n      this.setState({\n        reservations: reservations,\n        FoodItems: reservAlim,\n      });\n    } else {\n      alert(\"Http error: \" + response.status);\n    }\n  }\n\n  itemTemplate(reservation) {\n    if (!reservation) {\n      return;\n    }\n\n    return this.renderListItem(reservation);\n  }\n\n  setItemBackgroundColor(data) {\n    let background = \"\";\n\n    if (this.daysUntil(data.expirationDate) > 3) {\n      background = \"#bae3ba\";\n    } else if (this.daysUntil(data.expirationDate) <= 0) {\n      background = \"#cf6b5f\";\n    } else {\n      background = \"#ebe4ab\";\n    }\n\n    return background;\n  }\n\n  renderListItem(data) {\n    return (\n      <div class=\"product-card\">\n        <div class=\"badge border\" style={{ backgroundColor: \"orange\" }}>\n          {data.status}\n        </div>\n        <div\n          class=\"product-tumb\"\n          style={{\n            backgroundColor: this.setItemBackgroundColor(data.aliments[0]),\n          }}\n        >\n          <img\n            src={`${data.aliments[0].image}`}\n            onError={(e) => (e.target.src = \"\")}\n            alt={data.aliments[0].name}\n          ></img>\n        </div>\n        <div class=\"product-details\">\n          <div>\n            <span class=\"d-inline-block float-left\">\n              <i class=\"bi bi-tags\"></i>\n            </span>\n            <span class=\"product-catagory  d-inline-block  \">\n              &nbsp; <u>Category:</u>\n            </span>\n          </div>\n          <h5>\n            {data.aliments[0].category\n              ? data.aliments[0].category.toUpperCase()\n              : \"-\"}\n          </h5>\n          <div>\n            <span class=\"d-inline-block float-left\">\n              <h5 class=\"bi bi-bag\"></h5>\n            </span>\n            <span class=\"product-catagory d-inline-block font-weight-bold \">\n              &nbsp; <u>Name:</u>\n            </span>\n          </div>\n          <h4>{data.aliments[0].name}</h4>\n\n          <div>\n            <span class=\"d-inline-block float-left\">\n              <h5 class=\"bi bi-card-text\"></h5>{\" \"}\n            </span>\n            <span class=\"product-catagory d-inline-block font-weight-bold \">\n              &nbsp; <u>Ingredients:</u>\n            </span>\n          </div>\n          <div class=\"rounded border border-dark border-2 p-2\">\n            <h5>{data.aliments[0].ingredients}</h5>\n          </div>\n\n          <div class=\"product-bottom-details\">\n            <div>\n              <span class=\"d-inline-block float-left\">\n                <h5 class=\"bi-alarm\"></h5>\n              </span>\n              <span class=\"product-catagory d-inline-block font-weight-bold \">\n                &nbsp; <u>Expirey Date:</u>\n              </span>\n            </div>\n            <div class=\"product-price\">\n              {data.aliments[0].expirationDate.substring(0, 10)}\n            </div>\n\n            <div class=\"product-links\">\n              <span class=\"d-inline-block float-right\">\n                <h5 class=\"bi bi-speedometer2\"></h5>\n              </span>\n              <span class=\"product-catagory d-inline-block font-weight-bold \">\n                <u>Weight:</u>&nbsp;\n              </span>\n            </div>\n            <p class=\"float-right\">{data.aliments[0].weight} Kg</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <div\n          id=\"background\"\n          style={{ backgroundImage: \"url(/images/green-leaves.svg)\" }}\n        ></div>\n        <h1\n          style={{\n            marginTop: \"0px\",\n            marginBottom: \"30px\",\n            fontStyle: \"normal\",\n            backgroundColor: \"#C9906F\",\n          }}\n        >\n          Anti Food Waste App\n        </h1>\n\n        <Menu />\n        <h1\n          style={{\n            marginTop: \"0px\",\n            marginBottom: \"30px\",\n            fontStyle: \"normal\",\n            backgroundColor: \"#C9906F\",\n          }}\n        >\n          My Reservations\n        </h1>\n\n        <div>\n          <div className=\"card\">\n            <DataView\n              value={this.state.reservations}\n              layout={this.state.layout}\n              itemTemplate={this.itemTemplate}\n              rows={8}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default UserReservedFoodItemsContainer;\n","C:\\Users\\enciu\\Desktop\\foodWasteApp\\webtech_project\\client\\src\\components\\friends\\AddFriend.js",[],"C:\\Users\\enciu\\Desktop\\foodWasteApp\\webtech_project\\client\\src\\components\\friends\\FriendsContainer.js",[],"C:\\Users\\enciu\\Desktop\\foodWasteApp\\webtech_project\\client\\src\\components\\menubar\\Menu.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":188,"column":17,"nodeType":"77","endLine":188,"endColumn":39},{"ruleId":"75","severity":1,"message":"76","line":199,"column":17,"nodeType":"77","endLine":199,"endColumn":45},{"ruleId":"75","severity":1,"message":"76","line":213,"column":19,"nodeType":"77","endLine":213,"endColumn":40},{"ruleId":"75","severity":1,"message":"76","line":224,"column":19,"nodeType":"77","endLine":224,"endColumn":50},{"ruleId":"75","severity":1,"message":"76","line":98,"column":11,"nodeType":"77","endLine":98,"endColumn":48},{"ruleId":"78","severity":1,"message":"79","line":283,"column":7,"nodeType":"77","endLine":283,"endColumn":108},{"ruleId":"75","severity":1,"message":"76","line":142,"column":15,"nodeType":"77","endLine":142,"endColumn":37},{"ruleId":"75","severity":1,"message":"76","line":152,"column":15,"nodeType":"77","endLine":152,"endColumn":43},{"ruleId":"75","severity":1,"message":"76","line":165,"column":17,"nodeType":"77","endLine":165,"endColumn":38},{"ruleId":"75","severity":1,"message":"76","line":177,"column":17,"nodeType":"77","endLine":177,"endColumn":48},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]